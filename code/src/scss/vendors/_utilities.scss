/* utilities.scss */

$border-radius: (
	lg: 0.5rem,
	// 8px
	xl: 1rem,
	// 16px
	2xl: 1.5rem,
	// 24px
	3xl: 2.5rem,
	// 40px
	full: 9999px
);

$font-sizes: (
	'2xs': 0.625rem,
	// 10px
	xs: 0.75rem,
	// 12px
	sm: 0.875rem,
	// 14px
	md: 1rem,
	// 16px
	lg: 1.125rem,
	// 18px
	xl: 1.25rem,
	// 20px
	'2xl': 1.5rem,
	// 24px
	'3xl': 1.875rem,
	// 30px
	'4xl': 2.25rem,
	// 36px
	'5xl': 3rem,
	// 48px
	'6xl': 3.75rem,
	// 60px
	'7xl': 4.5rem,
	// 72px
	'8xl': 6rem,
	// 96px
	'9xl': 8rem // 128px
);

$gap-sizes: (
	1: 0.25rem,
	// 4px
	2: 0.5rem,
	// 8px
	3: 0.75rem,
	// 12px
	4: 1rem,
	// 16px
	5: 1.25rem,
	// 20px
	6: 1.5rem,
	// 24px
	7: 1.75rem,
	// 28px
	8: 2rem,
	// 32px
	9: 2.25rem,
	// 36px
	10: 2.5rem,
	// 40px
	11: 2.75rem // 44px
);

$letter-spacing: (
	tighter: -0.075rem,
	tight: -0.025em,
	condensed: -0.02em,
	normal: 0,
	loose: 0.02em,
	wide: 0.025em,
	wider: 0.05em,
	widest: 0.1em
);

$line-height: (
	110: 110%,
	140: 140%,
	150: 150%,
	160: 160%
);

$min-max-widths: (
	0: 0rem,
	4xs: 10rem,
	// 160px
	3xs: 14rem,
	// 224px
	2xs: 17rem,
	// 272px
	xs: 20rem,
	// 320px
	sm: 24rem,
	// 384px
	md: 28rem,
	// 448px
	lg: 32rem,
	// 512px
	xl: 36rem,
	// 576px
	2xl: 42rem,
	// 672px
	3xl: 48rem,
	// 768px
	4xl: 56rem,
	// 896px
	5xl: 64rem,
	// 1024px
	6xl: 72rem,
	// 1152px
	7xl: 80rem,
	// 1280px
	8xl: 96rem,
	// 1536px
	9xl: 112rem,
	// 1792px
	100: 100%,
	fit-content: fit-content
);

$sizes: (
	0: 0rem,
	px: 0.0625rem,
	// 1px
	1: 0.25rem,
	// 4px
	2: 0.5rem,
	// 8px
	3: 0.75rem,
	// 12px
	4: 1rem,
	// 16px
	5: 1.25rem,
	// 20px
	6: 1.5rem,
	// 24px
	7: 1.75rem,
	// 28px
	8: 2rem,
	// 32px
	9: 2.25rem,
	// 36px
	10: 2.5rem,
	// 40px
	11: 2.75rem,
	// 44px
	12: 3rem,
	// 48px
	14: 3.5rem,
	// 56px
	16: 4rem,
	// 64px
	20: 5rem,
	// 80px
	24: 6rem,
	// 96px
	28: 7rem,
	// 112px
	32: 8rem,
	// 128px
	36: 9rem,
	// 144px
	40: 10rem,
	// 160px
	44: 11rem,
	// 176px
	48: 12rem,
	// 192px
	52: 13rem,
	// 208px
	56: 14rem,
	// 224px
	60: 15rem,
	// 240px
	64: 16rem,
	// 256px
	72: 18rem,
	// 288px
	80: 20rem,
	// 320px
	96: 24rem // 384px
);

$utilities: map-merge(
	$utilities,
	(
		'background-color':
			map-merge(
				map-get($utilities, 'background-color'),
				(
					responsive: true
				)
			),
		'border':
			map-merge(
				map-get($utilities, 'border'),
				(
					responsive: true
				)
			),
		'border-bottom':
			map-merge(
				map-get($utilities, 'border-bottom'),
				(
					responsive: true
				)
			),
		'border-end':
			map-merge(
				map-get($utilities, 'border-end'),
				(
					responsive: true
				)
			),
		'border-start':
			map-merge(
				map-get($utilities, 'border-start'),
				(
					responsive: true
				)
			),
		'border-top':
			map-merge(
				map-get($utilities, 'border-top'),
				(
					responsive: true
				)
			),
		'height':
			map-merge(
				map-get($utilities, 'height'),
				(
					responsive: true
				)
			),
		'min-viewport-height': (
			property: min-height,
			class: wk-min-dvh,
			responsive: true,
			values: (
				100: 100dvh
			)
		),
		'min-viewport-width':
			map-merge(
				map-get($utilities, 'min-viewport-width'),
				(
					responsive: true
				)
			),
		'width':
			map-merge(
				map-get($utilities, 'width'),
				(
					responsive: true
				)
			),
		'wk-font-size': (
			rfs: true,
			property: font-size,
			class: wk-fs,
			responsive: true,
			values: $font-sizes
		),
		'wk-gap': (
			property: gap,
			class: wk-gap,
			responsive: true,
			values: $gap-sizes
		),
		'wk-height': (
			property: height,
			class: wk-h,
			responsive: true,
			values: $sizes
		),
		'wk-letter-spacing': (
			property: letter-spacing,
			class: wk-ls,
			values: $letter-spacing
		),
		'wk-line-height': (
			property: line-height,
			class: wk-lh,
			values: $line-height
		),
		'wk-margin': (
			property: margin,
			class: wk-m,
			responsive: true,
			values: $sizes
		),
		'wk-margin-bottom': (
			property: margin-bottom,
			class: wk-mb,
			responsive: true,
			values: $sizes
		),
		'wk-margin-end': (
			property: margin-right,
			class: wk-me,
			responsive: true,
			values: $sizes
		),
		'wk-margin-start': (
			property: margin-left,
			class: wk-ms,
			responsive: true,
			values: $sizes
		),
		'wk-margin-top': (
			property: margin-top,
			class: wk-mt,
			responsive: true,
			values: $sizes
		),
		'wk-margin-x': (
			property: margin-left margin-right,
			class: wk-mx,
			responsive: true,
			values: $sizes
		),
		'wk-margin-y': (
			property: margin-top margin-bottom,
			class: wk-my,
			responsive: true,
			values: $sizes
		),
		'wk-max-width': (
			property: max-width,
			class: wk-max-w,
			responsive: true,
			values: $min-max-widths
		),
		'wk-min-height': (
			property: min-height,
			class: wk-min-h,
			responsive: true,
			values: $sizes
		),
		'wk-min-width': (
			property: min-width,
			class: wk-min-w,
			responsive: true,
			values: $min-max-widths
		),
		'wk-padding': (
			property: padding,
			class: wk-p,
			responsive: true,
			values: $sizes
		),
		'wk-padding-bottom': (
			property: padding-bottom,
			class: wk-pb,
			responsive: true,
			values: $sizes
		),
		'wk-padding-end': (
			property: padding-right,
			class: wk-pe,
			responsive: true,
			values: $sizes
		),
		'wk-padding-start': (
			property: padding-left,
			class: wk-ps,
			responsive: true,
			values: $sizes
		),
		'wk-padding-top': (
			property: padding-top,
			class: wk-pt,
			responsive: true,
			values: $sizes
		),
		'wk-padding-x': (
			property: padding-left padding-right,
			class: wk-px,
			responsive: true,
			values: $sizes
		),
		'wk-padding-y': (
			property: padding-top padding-bottom,
			class: wk-py,
			responsive: true,
			values: $sizes
		),
		'wk-rounded': (
			property: border-radius,
			responsive: true,
			class: wk-rounded,
			values: $border-radius
		),
		'wk-rounded-bottom': (
			property: border-bottom-left-radius border-bottom-right-radius,
			responsive: true,
			class: wk-rounded-bottom,
			values: $border-radius
		),
		'wk-rounded-bottom-end': (
			property: border-bottom-right-radius,
			responsive: true,
			class: wk-rounded-bottom-end,
			values: $border-radius
		),
		'wk-rounded-bottom-start': (
			property: border-bottom-left-radius,
			responsive: true,
			class: wk-rounded-bottom-start,
			values: $border-radius
		),
		'wk-rounded-end': (
			property: border-top-right-radius border-bottom-right-radius,
			responsive: true,
			class: wk-rounded-end,
			values: $border-radius
		),
		'wk-rounded-start': (
			property: border-top-left-radius border-bottom-left-radius,
			responsive: true,
			class: wk-rounded-start,
			values: $border-radius
		),
		'wk-rounded-top': (
			property: border-top-left-radius border-top-right-radius,
			responsive: true,
			class: wk-rounded-top,
			values: $border-radius
		),
		'wk-rounded-top-end': (
			property: border-top-right-radius,
			responsive: true,
			class: wk-rounded-top-end,
			values: $border-radius
		),
		'wk-rounded-top-start': (
			property: border-top-left-radius,
			responsive: true,
			class: wk-rounded-top-start,
			values: $border-radius
		)
	)
);

// container query utilities
$container-query-columns: (
	1: 8.33333333cqw,
	2: 16.66666667cqw,
	3: 25cqw,
	4: 33.33333333cqw,
	5: 41.66666667cqw,
	6: 50cqw,
	7: 58.33333333cqw,
	8: 66.66666667cqw,
	9: 75cqw,
	10: 83.33333333cqw,
	11: 91.66666667cqw,
	12: 100cqw
);

// Container queries using Bootstraps 12 column grid system and breakpoints...
.wk-cq-grid {
	container-type: inline-size;
	display: flex;
	flex-wrap: wrap;
	// gap: 1rem; // This does not work because the grid width percentages are not accounting for the gap.

	& > * {
		flex: 0 0 auto;
		width: 100cqw;
	}
}

@each $infix, $breakpoint in $grid-breakpoints {
	@container (min-width: #{$breakpoint}) {
		@each $column, $value in $container-query-columns {
			.wk-cq-grid-#{$infix}-#{$column} {
				width: #{$value};
			}
		}
		.wk-cq-grid-#{$infix}-visually-hidden,
		.wk-cq-grid-#{$infix}-visually-hidden-focusable:not(:focus):not(:focus-within) {
			@include visually-hidden();
		}
		@each $size, $value in $sizes {
			.wk-cq-pe-#{$infix}-#{$size} {
				padding-right: #{$value} !important;
			}
		}
	}
}
